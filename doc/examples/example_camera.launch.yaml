---
# Assumes the input camera has the following topics:
#   - color image: /zed/zed_node/left/image_rect_color
#   - color info:  /zed/zed_node/left/camera_info
#   - depth image: /zed/zed_node/depth/depth_registered
launch:
  - arg: {name: labelspace_name, default: ade20k_mit}
  - group:  # semantic segmentation
      - push_ros_namespace: zed
      - set_remap: {from: color/image_raw, to: zed_node/left/image_rect_color}
      - include:
          file: $(find-pkg-share semantic_inference_ros)/launch/closed_set.launch.yaml
          arg:
            - {name: labelspace_name, value: $(arg labelspace_name)}
  - set_remap: {from: hydra/input/camera/rgb/image_raw, to: /zed/zed_node/left/image_rect_color}
  - set_remap: {from: hydra/input/camera/rgb/camera_info, to: /zed/zed_node/left/camera_info}
  - set_remap: {from: hydra/input/camera/depth_registered/image_rect, to: /zed/zed_node/depth/depth_registered}
  - set_remap: {from: hydra/input/camera/semantic/image_raw, to: /zed/zed_node/semantic/image_raw}
  - node:  # hydra
      pkg: hydra_ros
      exec: hydra_ros_node
      name: hydra
      args: >
        --config-utilities-file $(find-pkg-share hydra_ros)/doc/examples/example_config.yaml
        --config-utilities-file $(find-pkg-share hydra)/config/label_spaces/$(var labelspace_name)_label_space.yaml
        --config-utilities-yaml {log_path: $(env HOME)/.hydra/$(var dataset)}
  - set_remap: {from: hydra_visualizer/dsg, to: hydra/backend/dsg}
  - include:  # visualization
      file: $(find-pkg-share hydra_visualizer)/launch/streaming_visualizer.launch.yaml
