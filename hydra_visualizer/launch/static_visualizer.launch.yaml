---
launch:
  - arg: {name: verbosity, default: '0', description: visualizer verbosity}
  - arg: {name: debug, default: 'false', description: launch with gdb server}
  - arg: {name: scene_graph, default: '', description: filepath for scene graph to show}
  - arg: {name: visualizer_frame, default: map, description: frame_id for visualizations}
  - arg: {name: color_mesh_by_label, default: 'true', description: turn on mesh color adapter}
  - arg: {name: visualizer_ns, default: hydra_dsg_visualizer, description: visualizer namespace}
  - arg: {name: visualizer_config_path, default: $(find-pkg-share hydra_visualizer)/config/visualizer_config.yaml}
  - arg: {name: visualizer_plugins_path, default: $(find-pkg-share hydra_visualizer)/config/visualizer_plugins.yaml}
  - arg: {name: external_plugins_path, default: $(find-pkg-share hydra_visualizer)/config/external_plugins.yaml}
  # visualizer node and control for launching
  - node:
      pkg: hydra_visualizer
      exec: hydra_visualizer_node
      name: $(var visualizer_ns)
      launch-prefix: $(if $(var debug) 'gdbserver localhost:3000')
      on_exit: shutdown
      args: >
        -alsologtostderr -colorlogtostderr -v=$(var verbosity)
        --config-utilities-file $(var visualizer_config_path)
        --config-utilities-file $(var visualizer_plugins_path)
        --config-utilities-file $(var external_plugins_path)
        --config-utilities-yaml {visualizer_frame: $(var visualizer_frame), graph: {type: GraphFromFile, filepath: $(var scene_graph)}}
  # rviz node and control for launching
  - arg: {name: start_rviz, default: 'true', description: automatically start rviz}
  - arg: {name: rviz_path, default: $(find-pkg-share hydra_visualizer)/rviz/static_visualizer.rviz, description: rviz file to load}
  - node: {if: $(var start_rviz), name: rviz, pkg: rviz2, exec: rviz2, args: -d $(var rviz_path)}
