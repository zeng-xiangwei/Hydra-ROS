---
launch:
  - arg: {name: scene, default: office, description: uhumans2 scene name}
  - arg: {name: use_gt_semantics, default: 'true'}
  - arg: {name: labelspace, default: $(if $(var use_gt_semantics) uhumans2_$(var scene) ade20k_full)}
  - arg: {name: log_prefix, default: uhumans2_$(var scene)}
  - arg: {name: label_remap_path, default: $(find-pkg-share hydra)/config/label_remaps/uhumans2_$(var scene).yaml}
  - set_remap: {from: hydra/input/left_cam/depth_registered/image_rect, to: /tesse/depth_cam/mono/image_raw}
  - set_remap: {from: hydra/input/left_cam/rgb/image_raw, to: /tesse/left_cam/rgb/image_raw}
  - set_remap: {from: hydra/input/left_cam/rgb/camera_info, to: /tesse/left_cam/camera_info}
  - set_remap: {from: hydra/input/left_cam/semantic/image_raw, to: /tesse/seg_cam/converted/image_raw, if: $(var use_gt_semantics)}
  - set_remap: {from: hydra/input/left_cam/semantic/image_raw, to: semantic/image_raw, if: $(not $(var use_gt_semantics))}
  - let: {name: extra_yaml_gt, value: '{semantic_label_remap_filepath: $(var label_remap_path)}'}
  - let: {name: extra_yaml_no_gt, value: '{}'}
  - group:
    - set_remap: {from: color/image_raw, to: /tesse/left_cam/rgb/image_raw}
    - include:
        if: $(not $(var use_gt_semantics))
        file: $(find-pkg-share semantic_inference_ros)/launch/closed_set.launch.yaml
        arg:
          - {name: labelspace_name, value: $(var labelspace)}
  - include:
      file: $(find-pkg-share hydra_ros)/launch/hydra.launch.yaml
      arg:
        - {name: dataset, value: uhumans2}
        - {name: labelspace, value: $(var labelspace)}
        - {name: log_prefix, value: $(var log_prefix)}
        - {name: sensor_frame, value: left_cam}
        - {name: robot_frame, value: base_link_gt}
        - {name: odom_frame, value: world}
        - {name: map_frame, value: map}
        - {name: lcd_config_path, value: $(find-pkg-share hydra)/config/lcd/uhumans2.yaml}
        - {name: extra_yaml, value: $(if $(var use_gt_semantics) $(var extra_yaml_gt) $(var extra_yaml_no_gt))}
